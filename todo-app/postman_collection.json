{
  "info": {
    "_postman_id": "todo-app-2025",
    "name": "Todo App - Complete Test Suite",
    "description": "PostgreSQL + TypeORM + Zod Todo App API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5432/api"
    },
    {
      "key": "user_id",
      "value": ""
    },
    {
      "key": "todo_id",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Users",
      "item": [
        {
          "name": "1. Create User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser_{{$timestamp}}\",\n  \"email\": \"testuser_{{$timestamp}}@example.com\",\n  \"password\": \"testpass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json).to.have.property('id');",
                  "    pm.expect(json).to.have.property('username');",
                  "    pm.expect(json).to.have.property('email');",
                  "    pm.expect(json).to.not.have.property('password_hash');",
                  "    pm.collectionVariables.set('user_id', json.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2. Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is array', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "3. Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User data is correct', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json.id).to.equal(pm.collectionVariables.get('user_id'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Todos",
      "item": [
        {
          "name": "1. Create Todo",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Todo - {{$timestamp}}\",\n  \"description\": \"Bu bir test todo'sudur\",\n  \"user_id\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/todos",
              "host": ["{{base_url}}"],
              "path": ["todos"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has todo data', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json).to.have.property('id');",
                  "    pm.expect(json).to.have.property('title');",
                  "    pm.expect(json.completed).to.equal(false);",
                  "    pm.collectionVariables.set('todo_id', json.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2. Get All Todos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/todos",
              "host": ["{{base_url}}"],
              "path": ["todos"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is array', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "3. Get Todo by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/todos/{{todo_id}}",
              "host": ["{{base_url}}"],
              "path": ["todos", "{{todo_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Todo data is correct', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json.id).to.equal(pm.collectionVariables.get('todo_id'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "4. Update Todo (PUT)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Güncellenmiş Todo\",\n  \"description\": \"Bu todo güncellendi\",\n  \"completed\": true,\n  \"user_id\": \"{{user_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/todos/{{todo_id}}",
              "host": ["{{base_url}}"],
              "path": ["todos", "{{todo_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Todo is updated', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json.title).to.equal('Güncellenmiş Todo');",
                  "    pm.expect(json.completed).to.equal(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "5. Partial Update Todo (PATCH)",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"PATCH ile güncellendi\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/todos/{{todo_id}}",
              "host": ["{{base_url}}"],
              "path": ["todos", "{{todo_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Description is updated', function () {",
                  "    var json = pm.response.json();",
                  "    pm.expect(json.description).to.include('PATCH ile güncellendi');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Query Tests",
      "item": [
        {
          "name": "Search Todos (q parameter)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/todos?q=test",
              "host": ["{{base_url}}"],
              "path": ["todos"],
              "query": [
                { "key": "q", "value": "test" }
              ]
            }
          }
        },
        {
          "name": "Filter Completed Todos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/todos?completed=true",
              "host": ["{{base_url}}"],
              "path": ["todos"],
              "query": [
                { "key": "completed", "value": "true" }
              ]
            }
          }
        },
        {
          "name": "Get User's Todos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/todos",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "todos"]
            }
          }
        }
      ]
    },
    {
      "name": "Validation Tests",
      "item": [
        {
          "name": "Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"invalid-email\",\n  \"password\": \"testpass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Missing Required Fields",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/todos",
              "host": ["{{base_url}}"],
              "path": ["todos"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Cleanup",
      "item": [
        {
          "name": "Delete Todo",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/todos/{{todo_id}}",
              "host": ["{{base_url}}"],
              "path": ["todos", "{{todo_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 204 or 200', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}
